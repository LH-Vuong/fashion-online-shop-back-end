{
    "swagger": "2.0",
    "info": {
        "description": "Online Shop API",
        "title": "Online Shop API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "vangxitrum",
            "url": "http://www.swagger.io/support",
            "email": "19522482@gm.uit.edu.vn"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "127.0.0.1:8081",
    "basePath": "/api/",
    "paths": {
        "/auth/sign-in": {
            "post": {
                "description": "Login and set access token to header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "User's credentials",
                        "name": "SignInModel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SignInModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "Endpoint to allow a user to sign up with their details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "sign up user",
                "parameters": [
                    {
                        "description": "User's profile",
                        "name": "SignUpModel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SignUpModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "fail",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/verify": {
            "get": {
                "description": "Verify user email using verification code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify user email",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique token",
                        "name": "uniqueToken",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cart": {
            "put": {
                "description": "add item to cart, return info of added item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "add item to cart",
                "parameters": [
                    {
                        "description": "Add item request",
                        "name": "CartRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CartItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Update cart item by delete all old cart items, then add received item to customer card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "update cart of customer by received cart item",
                "parameters": [
                    {
                        "description": "access token received after login",
                        "name": "CartRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateCartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete cart item by product id of customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "delete card item of customer cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer's id",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "product's id",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cart/checkout": {
            "get": {
                "description": "Check out customer cart then delete invalid item(sold out item) return list of sold-out Items' ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Use to validate items of cart then modify it if invalid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer's id",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/": {
            "put": {
                "description": "Create order by customer's. Will delete all items of customer's cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Creat order",
                "parameters": [
                    {
                        "description": "access token received after login",
                        "name": "OrderRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/order.OrderInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/orders/": {
            "get": {
                "description": "List order by customer id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "list of customer's order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "index of first item, default is 0",
                        "name": "off_set",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "max length of response, default is 10",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.PagingResponse-order_OrderInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "description": "get the product info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "get product info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/products/": {
            "get": {
                "description": "list of the product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "list of product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a list of brand name separated by commas",
                        "name": "brands",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "a list of color name separated by commas (FULL UPPERCASE format)",
                        "name": "colors",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "a list of tag name ['HOT','NEW','SALE'] separated by commas",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "a list of gender type ['KID','WOMEN','MEN'] separated by commas",
                        "name": "genders",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "a list of type name separated by commas",
                        "name": "types",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum of avg rate of product",
                        "name": "rate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Range of values in format 'min_value,max_value' ",
                        "name": "price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Key work relate to products' name ",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "current page's number ,start at 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Length per page from '1' to '10000'",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.PagingResponse-model_Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get the current user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CartItem": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "product_detail": {
                    "$ref": "#/definitions/model.Product"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "model.Product": {
            "type": "object",
            "properties": {
                "avr_rate": {
                    "type": "number"
                },
                "brand": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_amount": {
                    "type": "number"
                },
                "discount_percent": {
                    "type": "number"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "photos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "price": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.SignInModel": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "model.SignUpModel": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "password",
                "password_confirm"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "password_confirm": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "order.OrderInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "coupon_code": {
                    "type": "string"
                },
                "coupon_discount": {
                    "type": "integer"
                },
                "customer_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CartItem"
                    }
                },
                "payment_info": {
                    "$ref": "#/definitions/payment.PaymentDetail"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "payment.Method": {
            "type": "string",
            "enum": [
                "ZALO_PAY",
                "COD"
            ],
            "x-enum-varnames": [
                "ZaloPayMethod",
                "CODMethod"
            ]
        },
        "payment.PaymentDetail": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "order_url": {
                    "type": "string"
                },
                "payment_at": {
                    "type": "integer"
                },
                "payment_id": {
                    "type": "string"
                },
                "payment_method": {
                    "$ref": "#/definitions/payment.Method"
                },
                "received_amount": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/payment.Status"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "payment.Status": {
            "type": "string",
            "enum": [
                "INIT",
                "PENDING",
                "CANCEL",
                "ERROR"
            ],
            "x-enum-varnames": [
                "StatusInit",
                "StatusPending",
                "StatusCancel",
                "StatusError"
            ]
        },
        "request.AddItemRequest": {
            "type": "object",
            "required": [
                "customer_id",
                "productId",
                "quantity"
            ],
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "request.CreateOrderRequest": {
            "type": "object",
            "properties": {
                "address_info": {
                    "type": "string"
                },
                "coupon_code": {
                    "type": "string"
                },
                "payment_method": {
                    "$ref": "#/definitions/payment.Method"
                }
            }
        },
        "request.UpdateCartRequest": {
            "type": "object",
            "required": [
                "customer_id",
                "items"
            ],
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.UpdateItem"
                    }
                }
            }
        },
        "request.UpdateItem": {
            "type": "object",
            "required": [
                "productId",
                "quantity"
            ],
            "properties": {
                "productId": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "response.PagingResponse-model_Product": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Product"
                    }
                },
                "length": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.PagingResponse-order_OrderInfo": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/order.OrderInfo"
                    }
                },
                "length": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}